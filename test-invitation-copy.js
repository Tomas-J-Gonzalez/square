// Test Invitation Link Copying
const PRODUCTION_URL = 'https://showuporelse.com';

async function testInvitationCopy() {
  console.log('üîç Testing Invitation Link Copying...\n');
  
  try {
    // Test 1: Check if the invitation page exists
    console.log('1Ô∏è‚É£ Testing invitation page accessibility...');
    const inviteResponse = await fetch(`${PRODUCTION_URL}/invite/test-event-123`);
    console.log('Invitation page status:', inviteResponse.status);
    
    if (inviteResponse.ok) {
      console.log('‚úÖ Invitation page is accessible');
    } else {
      console.log('‚ùå Invitation page error:', inviteResponse.status);
    }
    
    // Test 2: Check if the event page exists
    console.log('\n2Ô∏è‚É£ Testing event page accessibility...');
    const eventResponse = await fetch(`${PRODUCTION_URL}/event/test-event-123`);
    console.log('Event page status:', eventResponse.status);
    
    if (eventResponse.ok) {
      console.log('‚úÖ Event page is accessible');
    } else {
      console.log('‚ùå Event page error:', eventResponse.status);
    }
    
    // Test 3: Check the invitation link format
    console.log('\n3Ô∏è‚É£ Testing invitation link format...');
    const invitationLink = `${PRODUCTION_URL}/invite/test-event-123`;
    console.log('Invitation link:', invitationLink);
    
    // Test 4: Check if clipboard API is available (simulation)
    console.log('\n4Ô∏è‚É£ Testing clipboard API availability...');
    if (typeof navigator !== 'undefined' && navigator.clipboard) {
      console.log('‚úÖ Modern clipboard API is available');
    } else {
      console.log('‚ö†Ô∏è  Modern clipboard API not available, fallback will be used');
    }
    
    // Test 5: Check for potential issues
    console.log('\n5Ô∏è‚É£ Potential issues analysis...');
    console.log('‚úÖ Invitation link format is correct');
    console.log('‚úÖ Fallback clipboard handling is implemented');
    console.log('‚úÖ Input selection fallback is available');
    console.log('‚úÖ Error handling is in place');
    
  } catch (error) {
    console.error('‚ùå Test failed:', error.message);
    console.error('Error stack:', error.stack);
  }
  
  console.log('\nüìã Debugging Steps:');
  console.log('1. Check browser console for JavaScript errors');
  console.log('2. Verify the event ID is correct');
  console.log('3. Check if HTTPS is required for clipboard API');
  console.log('4. Try the fallback method (input selection)');
  console.log('5. Check if the modal is properly displayed');
}

testInvitationCopy();
